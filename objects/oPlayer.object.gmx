<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerStanding</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DECLARATIONS
state = state.stand;
image_speed = 0.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization code
/*
keyRight = keyboard_check(ord("D")) || keyboard_check(ord("E"));    //the "E" here is so that I can use my keyboard layout to play
keyLeft = -keyboard_check(ord("A"));
keyJump = keyboard_check_pressed(vk_space) || keyboard_check_pressed(ord("W"));

jumpSpeed = 15;
horizontalAcceleration = 0.2;   //arbitrary number as this made the animation look smooth

*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement code

switch(state){
    case state.stand: scriptStand(); break;
    case state.run: scriptRun(); break;
    case state.jump: scriptJump(); break;
}
/*
//if player is in air then pull them down with gravity.
if(place_free(x, (y + vspeed))){    //if y coord for next step is free
    gravity = 1;  
}else{
    //When player hits ground set velocities to 0
    move_contact_solid(270, 0); //moves the character the remaining distance to the ground
    gravity = 0;
    vspeed = 0; //stops player movement
}

//If key jump is pressed and player is standing on the ground then set velocity
if(keyJump &amp;&amp; place_meeting(x,y + 1, oWall)){   //if space is pressed and player is on the ground
    vspeed = -jumpSpeed; //sets the vertical speed to jumpSpeed upwards
}

//LEFT AND RIGHT
move = keyRight + keyLeft;  //determines direction and multiplies by move speed
if(move &lt; 0){   //if movement is to the left
    image_xscale = -1;  //look left
    if(hspeed &gt; -8){
        hspeed -= horizontalAcceleration;
    }
}else if(move &gt; 0){ //if movement is to the right
    image_xscale = 1;   //look right
    if(hspeed &lt; 8){
        hspeed += horizontalAcceleration;   //accelerate movement if not too fast
    }
}else{
    if((hspeed &lt;= 0.2 &amp;&amp; hspeed &gt; 0) || (hspeed &gt;= -0.2 &amp;&amp; hspeed &lt; 0)){ //check if below math does not remove all speed
        hspeed = 0;
    }else if(hspeed &lt; 0){ //if moving left
        hspeed += 0.4; //slow down rapidly
    }else if(hspeed &gt; 0){   //if moving right
        hspeed -= 0.4; //slow down rapidly
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
